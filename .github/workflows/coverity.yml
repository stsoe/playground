on: workflow_dispatch

jobs:
  xrt_coverity_scan:
    runs-on: ubuntu-latest
    steps:
    - name: List linux/version.h
      run: cat /usr/include/linux/version.h
    # - name: Checkout playground
    #   uses: actions/checkout@v2
    # - name: Checkout XRT
    #   run: git clone https://github.com/Xilinx/XRT
    # - name: Download and extract Coverity Build Tool
    #   run: |
    #     wget -q https://scan.coverity.com/download/cxx/linux64 --post-data "token=$TOKEN&project=Xilinx/XRT" -O cov-analysis-linux64.tar.gz
    #     mkdir cov-analysis-linux64
    #     tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
    #   env:
    #     TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
    # - name: Install dependencies
    #   run: |
    #     sudo apt update
    #     sudo ./XRT/src/runtime_src/tools/scripts/xrtdeps.sh
    # - name: Build with cov-build
    #   run: |
    #     export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
    #     cov-configure --comptype gcc --config config/conf.xml --compiler /usr/bin/c++
    #     cov-configure --comptype gcc --config config/conf.xml --compiler g++
    #     cov-configure --comptype gcc --config config/conf.xml --compiler gcc
    #     cov-build --dir cov-int --config config/conf.xml XRT/build/build.sh -opt -verbose -driver
    # - name: Submit the results to Coverity Scan
    #   run: |
    #     tar czvf xrt.tgz cov-int
    #     curl \
    #       --form project=Xilinx/XRT \
    #       --form token=$TOKEN \
    #       --form email=soren.soe@xilinx.com \
    #       --form version=trunk \
    #       --form description="Xilinx Runtime" \
    #       https://scan.coverity.com/builds?project=Xilinx/XRT
    #     env:
    #       TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
